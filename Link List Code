class Node:
    def __init__(self,data):
        self.data=data
        self.ref=None

class Linklist:
    def __init__(self):
        self.head=None
    
    def print_LL(self):
        if self.head is None:
            print("Linklist is empty.")
        else:
            n=self.head
            while n is not None:
                print(n.data)
                n=n.ref
                
    def add_begin(self,data):
        new_node = Node(data)
        new_node.ref=self.head
        self.head=new_node 
    
    def add_end(self,data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
        else:
            n=self.head
            while n.ref is not None:
                n=n.ref
            n.ref = new_node
    
    def add_middle(self,data,index):
        new_node = Node(data)
        n=index-2
        p = self.head
        while n != 0:
            p = p.ref
            n = n-1
        new_node.ref =p.ref
        p.ref =new_node
    
            
                
                
LL = Linklist()
LL.add_begin(1)
LL.add_end(2)
LL.add_end(3)
#LL.print_LL()
LL.add_middle(4,3)
LL.add_middle(6,2)
LL.print_LL()
            
            
